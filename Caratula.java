/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package calculadora;

import java.text.DecimalFormat;
import javax.swing.JOptionPane;

/**
 *
 * @author mjmedza
 */
public class Caratula extends javax.swing.JFrame {

    /**
     * Creates new form Caratula
     */
    public Caratula() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btResult = new javax.swing.JButton();
        btAdd = new javax.swing.JButton();
        btMinus = new javax.swing.JButton();
        btMultiply = new javax.swing.JButton();
        btPoint = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        btThree = new javax.swing.JButton();
        btSix = new javax.swing.JButton();
        btNine = new javax.swing.JButton();
        btTwo = new javax.swing.JButton();
        btFive = new javax.swing.JButton();
        btEight = new javax.swing.JButton();
        btOne = new javax.swing.JButton();
        btFour = new javax.swing.JButton();
        btSeven = new javax.swing.JButton();
        btDivide = new javax.swing.JButton();
        btLeft = new javax.swing.JButton();
        display = new javax.swing.JTextField();
        btCero = new javax.swing.JButton();
        btRight = new javax.swing.JButton();
        btDelete = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        expression = new javax.swing.JTextPane();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        btResult.setText("=");
        btResult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btResultActionPerformed(evt);
            }
        });

        btAdd.setText("+");
        btAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddActionPerformed(evt);
            }
        });

        btMinus.setText("-");
        btMinus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btMinusActionPerformed(evt);
            }
        });

        btMultiply.setText("x");
        btMultiply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btMultiplyActionPerformed(evt);
            }
        });

        btPoint.setText(".");
        btPoint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPointActionPerformed(evt);
            }
        });

        jButton7.setText("+/-");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        btThree.setText("3");
        btThree.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btThreeActionPerformed(evt);
            }
        });

        btSix.setText("6");
        btSix.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSixActionPerformed(evt);
            }
        });

        btNine.setText("9");
        btNine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNineActionPerformed(evt);
            }
        });

        btTwo.setText("2");
        btTwo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btTwoActionPerformed(evt);
            }
        });

        btFive.setText("5");
        btFive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFiveActionPerformed(evt);
            }
        });

        btEight.setText("8");
        btEight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEightActionPerformed(evt);
            }
        });

        btOne.setText("1");
        btOne.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btOneActionPerformed(evt);
            }
        });

        btFour.setText("4");
        btFour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFourActionPerformed(evt);
            }
        });

        btSeven.setText("7");
        btSeven.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSevenActionPerformed(evt);
            }
        });

        btDivide.setText("·/·");
        btDivide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDivideActionPerformed(evt);
            }
        });

        btLeft.setText("(");
        btLeft.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLeftActionPerformed(evt);
            }
        });

        display.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        display.setText("0");

        btCero.setText("0");
        btCero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCeroActionPerformed(evt);
            }
        });

        btRight.setText(")");
        btRight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRightActionPerformed(evt);
            }
        });

        btDelete.setText("DEL");
        btDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDeleteActionPerformed(evt);
            }
        });

        expression.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        expression.setEnabled(false);
        expression.setFocusable(false);
        jScrollPane2.setViewportView(expression);

        jButton1.setText("C");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(display)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btSeven, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btLeft, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btEight, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btRight, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btDivide, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(btNine, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(btMultiply, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btMinus, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btOne, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btFour, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btTwo, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(btThree, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btFive, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(btSix, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, 0)
                        .addComponent(btAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btCero, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                        .addGap(0, 0, 0)
                        .addComponent(btPoint, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(btResult, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(display, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btDivide, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btLeft, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btRight, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, 0)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btNine, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btEight, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btSeven, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, 0)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btSix, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btFive, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btFour, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btMultiply, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(btMinus, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(btAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btResult, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btThree, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btTwo, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btOne, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, 0)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btPoint, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btCero, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddActionPerformed
        // TODO add your handling code here:
        if (display.getText().equals("0")) {
            expression.setText(expression.getText().concat(" +"));
        } else {
            expression.setText(expression.getText().concat(" " + display.getText() + " +"));
        }
        display.setText("0");
    }//GEN-LAST:event_btAddActionPerformed

    private void btMinusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btMinusActionPerformed
        // TODO add your handling code here:
        if (display.getText().equals("0")) {
            expression.setText(expression.getText().concat(" -"));
        } else {
            expression.setText(expression.getText().concat(" " + display.getText() + " -"));
        }
        display.setText("0");
    }//GEN-LAST:event_btMinusActionPerformed

    private void btPointActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPointActionPerformed
        if (!display.getText().contains("."))
            display.setText(display.getText().concat("."));
    }//GEN-LAST:event_btPointActionPerformed

    private void btTwoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btTwoActionPerformed
        setDisplayText("2");
    }//GEN-LAST:event_btTwoActionPerformed

    private void btCeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCeroActionPerformed
        setDisplayText("0");
    }//GEN-LAST:event_btCeroActionPerformed

    private void btSixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSixActionPerformed
        setDisplayText("6");
    }//GEN-LAST:event_btSixActionPerformed

    private void btEightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEightActionPerformed
        setDisplayText("8");
    }//GEN-LAST:event_btEightActionPerformed

    private void btOneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btOneActionPerformed
        setDisplayText("1");
    }//GEN-LAST:event_btOneActionPerformed

    private void btThreeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btThreeActionPerformed
        setDisplayText("3");
    }//GEN-LAST:event_btThreeActionPerformed

    private void btFourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFourActionPerformed
        setDisplayText("4");
    }//GEN-LAST:event_btFourActionPerformed

    private void btFiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFiveActionPerformed
        setDisplayText("5");
    }//GEN-LAST:event_btFiveActionPerformed

    private void btSevenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSevenActionPerformed
        setDisplayText("7");
    }//GEN-LAST:event_btSevenActionPerformed

    private void btNineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNineActionPerformed
        setDisplayText("9");
    }//GEN-LAST:event_btNineActionPerformed

    private void btDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDeleteActionPerformed
        // TODO add your handling code here:
        if (!expression.getText().contains("=") && !display.equals("0")) {
            display.setText(display.getText().substring(0, display.getText().length()-1));
        }
    }//GEN-LAST:event_btDeleteActionPerformed

    private void btResultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btResultActionPerformed
        // TODO add your handling code here:
        if (!expression.getText().endsWith(")") && !expression.getText().contains("=")) {
            expression.setText(expression.getText().concat(" " + display.getText()));
            display.setText("0");
        }
        if (!expression.getText().contains("=") && isExpressionValid()) {
            solveExpression();
        }
    }//GEN-LAST:event_btResultActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        reset();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btLeftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLeftActionPerformed
        // TODO add your handling code here:
        if (display.getText().equals("0")) {
            expression.setText(expression.getText() + " (");
        } else {
            expression.setText(expression.getText() + " " + display.getText() + " (");
            display.setText("0");
        }
    }//GEN-LAST:event_btLeftActionPerformed

    private void btMultiplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btMultiplyActionPerformed
        // TODO add your handling code here:
        if (display.getText().equals("0")) {
            expression.setText(expression.getText().concat(" *"));
        } else {
            expression.setText(expression.getText().concat(" " + display.getText() + " *"));
        }
        display.setText("0");
    }//GEN-LAST:event_btMultiplyActionPerformed

    private void btDivideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDivideActionPerformed
        // TODO add your handling code here:
        if (display.getText().equals("0")) {
            expression.setText(expression.getText().concat(" /"));
        } else {
            expression.setText(expression.getText().concat(" " + display.getText() + " /"));
        }
        display.setText("0");
    }//GEN-LAST:event_btDivideActionPerformed

    private void btRightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRightActionPerformed
        // TODO add your handling code here:
        if (countChar('(', expression.getText()) > countChar(')', expression.getText())) {
            if (display.getText().equals("0")) {
                expression.setText(expression.getText() + " )");
            } else {
                expression.setText(expression.getText() + " " + display.getText() + " )");
                display.setText("0");
            }
        }
    }//GEN-LAST:event_btRightActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        String displayText = display.getText();
        if (displayText.contains("-")) {
            displayText = displayText.substring(1, displayText.length());
        } else {
            displayText = "-" + displayText;
        }
        display.setText(displayText);
    }//GEN-LAST:event_jButton7ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Caratula.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Caratula().setVisible(true);
            }
        });
    }
    
    /**
     * Método para poner el texto en la pantalla principal
     * @param text texto a poner
     */
    private void setDisplayText(String text) {
        if (display.getText().equals("0")) {
            display.setText(text);
        } else if (expression.getText().contains("=")) {
            reset();
            display.setText(text);
        } else {
            display.setText(display.getText() + text);
        }
    }
    
    /**
     * Método para regresar la calculadora a su estado inicial
     */
    private void reset() {
        display.setText("0");
        expression.setText("");
    }
    
    /**
     * Método para validar la expresión a resolver
     * @return True en caso que la expresión sea válida
     */
    private boolean isExpressionValid() {
        int leftCount = 0, rightCount = 0;
        String expressionText = expression.getText();
        for( int i = 0; i < expressionText.length(); i++) {
            if (expressionText.charAt(i) == '(') {
                leftCount++;
            } else if (expressionText.charAt(i) == ')') {
                rightCount++;
            }
        }
        
        // Se itera sobre la expresión para remover redundancia entre los operadores varias veces.
        while (expressionText.contains("* + ") || expressionText.contains("* - ") ||
                expressionText.contains("/ + ") || expressionText.contains("/ - ") ||
                expressionText.contains("- + ") || expressionText.contains("+ - ") ||
                expressionText.contains("- - ") || expressionText.contains("+ + ")) {
            expressionText = expressionText.replace("* + ", "* ");
            expressionText = expressionText.replace("* - ", "* -");
            expressionText = expressionText.replace("/ + ", "/ ");
            expressionText = expressionText.replace("/ - ", "/ -");
            expressionText = expressionText.replace("- + ", "- ");
            expressionText = expressionText.replace("+ - ", "- ");
            expressionText = expressionText.replace("- - ", "+ ");
            expressionText = expressionText.replace("+ + ", "+ ");
        }
        // Se regresa la expresión sin la redundancia de los operadores y simplificada.
        expression.setText(expressionText);
        
        if (leftCount != rightCount) {
            JOptionPane.showMessageDialog(this, "No hay un balance correcto de los paréntesis.", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        } else if (expressionText.contains("* /")) {
            JOptionPane.showMessageDialog(this, "Operadores \"* /\" invalidos", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        } else if (expressionText.contains("/ *")) {
            JOptionPane.showMessageDialog(this, "Operadores \"/ *\" invalidos", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        } else if (expressionText.contains("+ /")) {
            JOptionPane.showMessageDialog(this, "Operadores \"+ /\" invalidos", "Error", JOptionPane.ERROR_MESSAGE);            
            return false;
        } else if (expressionText.contains("/ /")) {
            JOptionPane.showMessageDialog(this, "Operadores \"/ /\" invalidos", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        } else if (expressionText.contains("* *")) {
            JOptionPane.showMessageDialog(this, "Operadores \"* *\" invalidos", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        } else if (expressionText.contains("+ *")) {
            JOptionPane.showMessageDialog(this, "Operadores \"+ *\" invalidos", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        } else if (expressionText.contains("- *")) {
            JOptionPane.showMessageDialog(this, "Operadores \"- *\" invalidos", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        } else if (expressionText.contains("- /")) {
            JOptionPane.showMessageDialog(this, "Operadores \"- /\" invalidos", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        } else {
            return true;
        }
    }
    
    /**
     * Método para resolver la expresión y presentar el resultado al usuario.
     
     */
    private void solveExpression() {
        String expressionText = expression.getText();
        expressionText = expressionText.replace("+ + ", "+ ");
        expressionText = expressionText.replace("+ - ", "- ");
        expressionText = expressionText.replace("- - ", "+ ");
        DecimalFormat decimalFormat = new DecimalFormat("0.#");
        display.setText(decimalFormat.format(new PostfixEv().evaluate(new InfixEv().evaluate(expressionText))));
        expression.setText(expression.getText() + " =");
    }
    
    /**
     * Método para contar la cantidad de veces que aparece un caracter en una cadena de texto.
     * @param character char valor buscado
     * @param text String cadena de texto
     * @return count int que es la cantidad de veces encontrado.
     */
    private int countChar(char character, String text) {
        int count = 0;
        for (int i = 0; i < text.length(); i++) {
            if (text.charAt(i) == character) {
                count ++;
            }
        }
        return count;
    }
    
    /**
     * Método genérico para añadir un operador a la expresión.
     * @param operand Operando a añadir.
     */
    private void addOperand(char operand) {
        if (display.getText().equals("0")) {
            expression.setText(expression.getText().concat(" +"));
        } else {
            expression.setText(expression.getText().concat(" " + display.getText() + " +"));
        }
        
        String expressionText = expression.getText();
        if (Utils.isOperator("" + expressionText.charAt(expressionText.length() - 1))) {
            expressionText = expressionText.substring(0, expressionText.length() - 2);
            expressionText += operand;
        } else  {
            expressionText += " " + operand;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAdd;
    private javax.swing.JButton btCero;
    private javax.swing.JButton btDelete;
    private javax.swing.JButton btDivide;
    private javax.swing.JButton btEight;
    private javax.swing.JButton btFive;
    private javax.swing.JButton btFour;
    private javax.swing.JButton btLeft;
    private javax.swing.JButton btMinus;
    private javax.swing.JButton btMultiply;
    private javax.swing.JButton btNine;
    private javax.swing.JButton btOne;
    private javax.swing.JButton btPoint;
    private javax.swing.JButton btResult;
    private javax.swing.JButton btRight;
    private javax.swing.JButton btSeven;
    private javax.swing.JButton btSix;
    private javax.swing.JButton btThree;
    private javax.swing.JButton btTwo;
    private javax.swing.JTextField display;
    private javax.swing.JTextPane expression;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton7;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
